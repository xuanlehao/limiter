<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


    <!-- 引入jedis的properties配置文件 -->
    <!--如果你有多个数据源需要通过<context:property-placeholder管理，且不愿意放在一个配置文件里，那么一定要加上ignore-unresolvable=“true"-->
    <context:property-placeholder location="redis.properties" ignore-unresolvable="true" />

    <!--shardedJedisPool的相关配置-->

    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool"  scope="singleton">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1">
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis.uri}" />
                </bean>
            </list>
        </constructor-arg>
    </bean>



</beans>










    <!--&lt;!&ndash; 引入redis配置 &ndash;&gt;
    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>
    &lt;!&ndash; Redis 配置 &ndash;&gt;
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxTotal}" />
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
    </bean>
    &lt;!&ndash; ↓↓↓↓↓redis 服务器中心 ↓↓↓↓↓ &ndash;&gt;
    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          destroy-method="destroy">
        <property name="poolConfig" ref="jedisPoolConfig"></property>
        &lt;!&ndash; Redis服务器地址 &ndash;&gt;
        <property name="hostName" value="${redis.host}"></property>
        &lt;!&ndash; 服务端口 &ndash;&gt;
        <property name="port" value="${redis.port}"></property>
        &lt;!&ndash; 授权密码 &ndash;&gt;
        <property name="password" value=""></property>
        &lt;!&ndash; 超时时间：单位ms &ndash;&gt;
        <property name="timeout" value="${redis.timeout}"></property>
        &lt;!&ndash;启用用户线程池 &ndash;&gt;
        <property name="usePool" value="true"></property>
    </bean>
    &lt;!&ndash; ↑↑↑↑↑redis 服务器中心 ↑↑↑↑↑ &ndash;&gt;
    &lt;!&ndash; redisTemplate配置，redisTemplate是对Jedis的对redis操作的扩展，有更多的操作，封装使操作更便捷 &ndash;&gt;
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
    </bean>-->